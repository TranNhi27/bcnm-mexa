{"ast":null,"code":"var _slicedToArray = require(\"/home/hayden/workplace/dapp-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _require = require('ethers/utils/bignumber'),\n    bigNumberify = _require.bigNumberify;\n\nvar RLP = require('ethers/utils/rlp');\n\nmodule.exports = function decodeTx(raw_tx) {\n  var decoded_tx = RLP.decode(raw_tx);\n\n  var _decoded_tx = _slicedToArray(decoded_tx, 9),\n      raw_nonce = _decoded_tx[0],\n      raw_gasPrice = _decoded_tx[1],\n      raw_gasLimit = _decoded_tx[2],\n      raw_to = _decoded_tx[3],\n      raw_value = _decoded_tx[4],\n      raw_data = _decoded_tx[5],\n      raw_v = _decoded_tx[6],\n      raw_r = _decoded_tx[7],\n      raw_s = _decoded_tx[8];\n\n  var transaction = {\n    nonce: bigNumberify(raw_nonce).toNumber(),\n    gasPrice: bigNumberify(raw_gasPrice),\n    gasLimit: bigNumberify(raw_gasLimit),\n    to: raw_to,\n    value: bigNumberify(raw_value),\n    data: raw_data,\n    v: bigNumberify(raw_v).toNumber(),\n    r: raw_r,\n    s: raw_s\n  };\n  if (transaction.to == '0x') delete transaction.to;\n  return transaction;\n};","map":{"version":3,"sources":["/home/hayden/workplace/dapp-demo/node_modules/ethereum-tx-decoder/src/decodeTransaction.js"],"names":["require","bigNumberify","RLP","module","exports","decodeTx","raw_tx","decoded_tx","decode","raw_nonce","raw_gasPrice","raw_gasLimit","raw_to","raw_value","raw_data","raw_v","raw_r","raw_s","transaction","nonce","toNumber","gasPrice","gasLimit","to","value","data","v","r","s"],"mappings":";;eAAqBA,OAAO,CAAC,wBAAD,C;IAAvBC,Y,YAAAA,Y;;AACL,IAAIC,GAAG,GAAGF,OAAO,CAAC,kBAAD,CAAjB;;AAEAG,MAAM,CAACC,OAAP,GAAiB,SAASC,QAAT,CAAkBC,MAAlB,EAA0B;AACzC,MAAIC,UAAU,GAAGL,GAAG,CAACM,MAAJ,CAAWF,MAAX,CAAjB;;AADyC,mCAarCC,UAbqC;AAAA,MAIvCE,SAJuC;AAAA,MAKvCC,YALuC;AAAA,MAMvCC,YANuC;AAAA,MAOvCC,MAPuC;AAAA,MAQvCC,SARuC;AAAA,MASvCC,QATuC;AAAA,MAUvCC,KAVuC;AAAA,MAWvCC,KAXuC;AAAA,MAYvCC,KAZuC;;AAezC,MAAIC,WAAW,GAAG;AAChBC,IAAAA,KAAK,EAAElB,YAAY,CAACQ,SAAD,CAAZ,CAAwBW,QAAxB,EADS;AAEhBC,IAAAA,QAAQ,EAAEpB,YAAY,CAACS,YAAD,CAFN;AAGhBY,IAAAA,QAAQ,EAAErB,YAAY,CAACU,YAAD,CAHN;AAIhBY,IAAAA,EAAE,EAAEX,MAJY;AAKhBY,IAAAA,KAAK,EAAEvB,YAAY,CAACY,SAAD,CALH;AAMhBY,IAAAA,IAAI,EAAEX,QANU;AAOhBY,IAAAA,CAAC,EAAEzB,YAAY,CAACc,KAAD,CAAZ,CAAoBK,QAApB,EAPa;AAQhBO,IAAAA,CAAC,EAAEX,KARa;AAShBY,IAAAA,CAAC,EAAEX;AATa,GAAlB;AAYA,MAAIC,WAAW,CAACK,EAAZ,IAAkB,IAAtB,EAA4B,OAAOL,WAAW,CAACK,EAAnB;AAE5B,SAAOL,WAAP;AACD,CA9BD","sourcesContent":["var {bigNumberify} = require('ethers/utils/bignumber');\nvar RLP = require('ethers/utils/rlp');\n\nmodule.exports = function decodeTx(raw_tx) {\n  var decoded_tx = RLP.decode(raw_tx);\n\n  var [\n    raw_nonce,\n    raw_gasPrice,\n    raw_gasLimit,\n    raw_to,\n    raw_value,\n    raw_data,\n    raw_v,\n    raw_r,\n    raw_s\n  ] = decoded_tx;\n\n  var transaction = {\n    nonce: bigNumberify(raw_nonce).toNumber(),\n    gasPrice: bigNumberify(raw_gasPrice),\n    gasLimit: bigNumberify(raw_gasLimit),\n    to: raw_to,\n    value: bigNumberify(raw_value),\n    data: raw_data,\n    v: bigNumberify(raw_v).toNumber(),\n    r: raw_r,\n    s: raw_s\n  }\n\n  if (transaction.to == '0x') delete transaction.to;\n\n  return transaction;\n}\n"]},"metadata":{},"sourceType":"script"}