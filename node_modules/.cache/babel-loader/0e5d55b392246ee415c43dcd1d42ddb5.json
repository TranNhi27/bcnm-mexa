{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _require = require(\"./abis\"),\n  daiAbi = _require.daiAbi,\n  erc20Eip2612Abi = _require.erc20Eip2612Abi;\nvar _require2 = require(\"ethers\"),\n  ethers = _require2.ethers;\nvar _require3 = require(\"./config\"),\n  config = _require3.config;\nvar daiDomainData = {\n  name: config.daiDomainName,\n  version: config.daiVersion\n};\n/**\n * Single method to be used for logging purpose.\n *\n * @param {string} message Message to be logged\n */\n\nfunction _logMessage(message) {\n  if (config && config.logsEnabled && console.log) {\n    console.log(message);\n  }\n}\nfunction isEthersProvider(provider) {\n  return ethers.providers.Provider.isProvider(provider);\n}\n/**\n * Class to provide methods to give token transfer permissions to Biconomy's ERC20Forwarder smart contract\n * ERC20Forwarder contract is responsible to calculate gas cost in ERC20 tokens and making a transfer on user's behalf\n * For DAI token there is a special permit method provided\n * For Tokens that support EIP2612 standard (like USDC) users should use eip2612Permit\n * Check https://docs.biconomy.io to see examples of how to use permit client to give one time token approvals\n */\n\nvar PermitClient = /*#__PURE__*/function () {\n  function PermitClient(provider, erc20ForwarderAddress, daiTokenAddress) {\n    (0, _classCallCheck2[\"default\"])(this, PermitClient);\n    if (isEthersProvider(provider)) {\n      this.provider = provider;\n    } else {\n      this.provider = new ethers.providers.Web3Provider(provider);\n    }\n    this.erc20ForwarderAddress = erc20ForwarderAddress;\n    this.daiTokenAddress = daiTokenAddress;\n    this.daiDomainData = daiDomainData;\n  }\n  /**\n   * method to provide permission to spend dai tokens to a desired spender\n   * @param {object} daiPermitOptions - dai permit options contains i) spender ii) expiry iii) user address iv) allowed\n   * All of the above options are optional\n   * If spender is not provided by default approval will be given to ERC20 Forwarder contract on the same network as your provider\n   * When your provider does not have a signer you must pass user address\n   */\n\n  (0, _createClass2[\"default\"])(PermitClient, [{\n    key: \"daiPermit\",\n    value: function () {\n      var _daiPermit = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(daiPermitOptions) {\n        var spender, expiry, allowed, userAddress, network, dai, nonce, permitDataToSign, result, signature, r, s, v, tx;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                spender = daiPermitOptions.spender || this.erc20ForwarderAddress;\n                expiry = daiPermitOptions.expiry || Math.floor(Date.now() / 1000 + 3600);\n                allowed = daiPermitOptions.allowed || true;\n                _context.t0 = daiPermitOptions.userAddress;\n                if (_context.t0) {\n                  _context.next = 9;\n                  break;\n                }\n                _context.next = 8;\n                return this.provider.getSigner().getAddress();\n              case 8:\n                _context.t0 = _context.sent;\n              case 9:\n                userAddress = _context.t0;\n                _context.next = 12;\n                return this.provider.getNetwork();\n              case 12:\n                network = _context.sent;\n                daiDomainData.chainId = network.chainId;\n                daiDomainData.verifyingContract = this.daiTokenAddress;\n                dai = new ethers.Contract(this.daiDomainData.verifyingContract, daiAbi, this.provider.getSigner());\n                _context.next = 18;\n                return dai.nonces(userAddress);\n              case 18:\n                nonce = _context.sent;\n                permitDataToSign = {\n                  types: {\n                    EIP712Domain: config.domainType,\n                    Permit: config.daiPermitType\n                  },\n                  domain: this.daiDomainData,\n                  primaryType: \"Permit\",\n                  message: {\n                    holder: userAddress,\n                    spender: spender,\n                    nonce: parseInt(nonce),\n                    expiry: parseInt(expiry),\n                    allowed: true\n                  }\n                };\n                _context.next = 22;\n                return this.provider.send(\"eth_signTypedData_v4\", [userAddress, JSON.stringify(permitDataToSign)]);\n              case 22:\n                result = _context.sent;\n                _logMessage(\"success\", result);\n                signature = result.substring(2);\n                r = \"0x\" + signature.substring(0, 64);\n                s = \"0x\" + signature.substring(64, 128);\n                v = parseInt(signature.substring(128, 130), 16);\n                _context.next = 30;\n                return dai.permit(userAddress, spender, parseInt(nonce), parseInt(expiry.toString()), allowed, v, r, s);\n              case 30:\n                tx = _context.sent;\n                return _context.abrupt(\"return\", tx);\n              case 34:\n                _context.prev = 34;\n                _context.t1 = _context[\"catch\"](0);\n                _logMessage(_context.t1);\n                throw _context.t1;\n              case 38:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 34]]);\n      }));\n      function daiPermit(_x) {\n        return _daiPermit.apply(this, arguments);\n      }\n      return daiPermit;\n    }()\n    /**\n     * method to provide permission to spend tokens that support EIP2612 Permit\n     * @param {object} permitOptions - permit options contain domainData, spender, value, deadline, userAddress\n     * domainData and value are manadatory options (check https://biconomy.docs.io to see a working example of this)\n     * If spender is not provided by default approval will be given to ERC20 Forwarder contract on the same network as your provider\n     * When your provider does not have a signer you must pass user address\n     */\n  }, {\n    key: \"eip2612Permit\",\n    value: function () {\n      var _eip2612Permit = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(permitOptions) {\n        var tokenDomainData, tokenDomainType, spender, value, deadline, userAddress, token, nonce, permitDataToSign, result, signature, r, s, v, tx;\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                tokenDomainData = permitOptions.domainData;\n                tokenDomainType = permitOptions.domainType || config.domainType;\n                spender = permitOptions.spender || this.erc20ForwarderAddress;\n                value = permitOptions.value;\n                deadline = permitOptions.deadline || Math.floor(Date.now() / 1000 + 3600);\n                _context2.t0 = permitOptions.userAddress;\n                if (_context2.t0) {\n                  _context2.next = 11;\n                  break;\n                }\n                _context2.next = 10;\n                return this.provider.getSigner().getAddress();\n              case 10:\n                _context2.t0 = _context2.sent;\n              case 11:\n                userAddress = _context2.t0;\n                token = new ethers.Contract(tokenDomainData.verifyingContract, erc20Eip2612Abi, this.provider.getSigner());\n                _context2.next = 15;\n                return token.nonces(userAddress);\n              case 15:\n                nonce = _context2.sent;\n                permitDataToSign = {\n                  types: {\n                    EIP712Domain: tokenDomainType,\n                    Permit: config.eip2612PermitType\n                  },\n                  domain: tokenDomainData,\n                  primaryType: \"Permit\",\n                  message: {\n                    owner: userAddress,\n                    spender: spender,\n                    nonce: parseInt(nonce),\n                    value: value,\n                    deadline: parseInt(deadline)\n                  }\n                };\n                _context2.next = 19;\n                return this.provider.send(\"eth_signTypedData_v4\", [userAddress, JSON.stringify(permitDataToSign)]);\n              case 19:\n                result = _context2.sent;\n                _logMessage(\"success\", result);\n                signature = result.substring(2);\n                r = \"0x\" + signature.substring(0, 64);\n                s = \"0x\" + signature.substring(64, 128);\n                v = parseInt(signature.substring(128, 130), 16);\n                _context2.next = 27;\n                return token.permit(userAddress, spender, value, parseInt(deadline.toString()), v, r, s);\n              case 27:\n                tx = _context2.sent;\n                return _context2.abrupt(\"return\", tx);\n              case 31:\n                _context2.prev = 31;\n                _context2.t1 = _context2[\"catch\"](0);\n                _logMessage(_context2.t1);\n                throw _context2.t1;\n              case 35:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 31]]);\n      }));\n      function eip2612Permit(_x2) {\n        return _eip2612Permit.apply(this, arguments);\n      }\n      return eip2612Permit;\n    }()\n  }]);\n  return PermitClient;\n}();\nmodule.exports = PermitClient;","map":{"version":3,"names":["_interopRequireDefault","require","_regenerator","_asyncToGenerator2","_classCallCheck2","_createClass2","_require","daiAbi","erc20Eip2612Abi","_require2","ethers","_require3","config","daiDomainData","name","daiDomainName","version","daiVersion","_logMessage","message","logsEnabled","console","log","isEthersProvider","provider","providers","Provider","isProvider","PermitClient","erc20ForwarderAddress","daiTokenAddress","Web3Provider","key","value","_daiPermit","mark","_callee","daiPermitOptions","spender","expiry","allowed","userAddress","network","dai","nonce","permitDataToSign","result","signature","r","s","v","tx","wrap","_callee$","_context","prev","next","Math","floor","Date","now","t0","getSigner","getAddress","sent","getNetwork","chainId","verifyingContract","Contract","nonces","types","EIP712Domain","domainType","Permit","daiPermitType","domain","primaryType","holder","parseInt","send","JSON","stringify","substring","permit","toString","abrupt","t1","stop","daiPermit","_x","apply","arguments","_eip2612Permit","_callee2","permitOptions","tokenDomainData","tokenDomainType","deadline","token","_callee2$","_context2","domainData","eip2612PermitType","owner","eip2612Permit","_x2","module","exports"],"sources":["/home/hayden/workplace/dapp-demo/node_modules/@biconomy/mexa/common-js/PermitClient.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _require = require(\"./abis\"),\n    daiAbi = _require.daiAbi,\n    erc20Eip2612Abi = _require.erc20Eip2612Abi;\n\nvar _require2 = require(\"ethers\"),\n    ethers = _require2.ethers;\n\nvar _require3 = require(\"./config\"),\n    config = _require3.config;\n\nvar daiDomainData = {\n  name: config.daiDomainName,\n  version: config.daiVersion\n};\n/**\n * Single method to be used for logging purpose.\n *\n * @param {string} message Message to be logged\n */\n\nfunction _logMessage(message) {\n  if (config && config.logsEnabled && console.log) {\n    console.log(message);\n  }\n}\n\nfunction isEthersProvider(provider) {\n  return ethers.providers.Provider.isProvider(provider);\n}\n/**\n * Class to provide methods to give token transfer permissions to Biconomy's ERC20Forwarder smart contract\n * ERC20Forwarder contract is responsible to calculate gas cost in ERC20 tokens and making a transfer on user's behalf\n * For DAI token there is a special permit method provided\n * For Tokens that support EIP2612 standard (like USDC) users should use eip2612Permit\n * Check https://docs.biconomy.io to see examples of how to use permit client to give one time token approvals\n */\n\n\nvar PermitClient = /*#__PURE__*/function () {\n  function PermitClient(provider, erc20ForwarderAddress, daiTokenAddress) {\n    (0, _classCallCheck2[\"default\"])(this, PermitClient);\n\n    if (isEthersProvider(provider)) {\n      this.provider = provider;\n    } else {\n      this.provider = new ethers.providers.Web3Provider(provider);\n    }\n\n    this.erc20ForwarderAddress = erc20ForwarderAddress;\n    this.daiTokenAddress = daiTokenAddress;\n    this.daiDomainData = daiDomainData;\n  }\n  /**\n   * method to provide permission to spend dai tokens to a desired spender\n   * @param {object} daiPermitOptions - dai permit options contains i) spender ii) expiry iii) user address iv) allowed\n   * All of the above options are optional\n   * If spender is not provided by default approval will be given to ERC20 Forwarder contract on the same network as your provider\n   * When your provider does not have a signer you must pass user address\n   */\n\n\n  (0, _createClass2[\"default\"])(PermitClient, [{\n    key: \"daiPermit\",\n    value: function () {\n      var _daiPermit = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(daiPermitOptions) {\n        var spender, expiry, allowed, userAddress, network, dai, nonce, permitDataToSign, result, signature, r, s, v, tx;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                spender = daiPermitOptions.spender || this.erc20ForwarderAddress;\n                expiry = daiPermitOptions.expiry || Math.floor(Date.now() / 1000 + 3600);\n                allowed = daiPermitOptions.allowed || true;\n                _context.t0 = daiPermitOptions.userAddress;\n\n                if (_context.t0) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _context.next = 8;\n                return this.provider.getSigner().getAddress();\n\n              case 8:\n                _context.t0 = _context.sent;\n\n              case 9:\n                userAddress = _context.t0;\n                _context.next = 12;\n                return this.provider.getNetwork();\n\n              case 12:\n                network = _context.sent;\n                daiDomainData.chainId = network.chainId;\n                daiDomainData.verifyingContract = this.daiTokenAddress;\n                dai = new ethers.Contract(this.daiDomainData.verifyingContract, daiAbi, this.provider.getSigner());\n                _context.next = 18;\n                return dai.nonces(userAddress);\n\n              case 18:\n                nonce = _context.sent;\n                permitDataToSign = {\n                  types: {\n                    EIP712Domain: config.domainType,\n                    Permit: config.daiPermitType\n                  },\n                  domain: this.daiDomainData,\n                  primaryType: \"Permit\",\n                  message: {\n                    holder: userAddress,\n                    spender: spender,\n                    nonce: parseInt(nonce),\n                    expiry: parseInt(expiry),\n                    allowed: true\n                  }\n                };\n                _context.next = 22;\n                return this.provider.send(\"eth_signTypedData_v4\", [userAddress, JSON.stringify(permitDataToSign)]);\n\n              case 22:\n                result = _context.sent;\n\n                _logMessage(\"success\", result);\n\n                signature = result.substring(2);\n                r = \"0x\" + signature.substring(0, 64);\n                s = \"0x\" + signature.substring(64, 128);\n                v = parseInt(signature.substring(128, 130), 16);\n                _context.next = 30;\n                return dai.permit(userAddress, spender, parseInt(nonce), parseInt(expiry.toString()), allowed, v, r, s);\n\n              case 30:\n                tx = _context.sent;\n                return _context.abrupt(\"return\", tx);\n\n              case 34:\n                _context.prev = 34;\n                _context.t1 = _context[\"catch\"](0);\n\n                _logMessage(_context.t1);\n\n                throw _context.t1;\n\n              case 38:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 34]]);\n      }));\n\n      function daiPermit(_x) {\n        return _daiPermit.apply(this, arguments);\n      }\n\n      return daiPermit;\n    }()\n    /**\n     * method to provide permission to spend tokens that support EIP2612 Permit\n     * @param {object} permitOptions - permit options contain domainData, spender, value, deadline, userAddress\n     * domainData and value are manadatory options (check https://biconomy.docs.io to see a working example of this)\n     * If spender is not provided by default approval will be given to ERC20 Forwarder contract on the same network as your provider\n     * When your provider does not have a signer you must pass user address\n     */\n\n  }, {\n    key: \"eip2612Permit\",\n    value: function () {\n      var _eip2612Permit = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(permitOptions) {\n        var tokenDomainData, tokenDomainType, spender, value, deadline, userAddress, token, nonce, permitDataToSign, result, signature, r, s, v, tx;\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                tokenDomainData = permitOptions.domainData;\n                tokenDomainType = permitOptions.domainType || config.domainType;\n                spender = permitOptions.spender || this.erc20ForwarderAddress;\n                value = permitOptions.value;\n                deadline = permitOptions.deadline || Math.floor(Date.now() / 1000 + 3600);\n                _context2.t0 = permitOptions.userAddress;\n\n                if (_context2.t0) {\n                  _context2.next = 11;\n                  break;\n                }\n\n                _context2.next = 10;\n                return this.provider.getSigner().getAddress();\n\n              case 10:\n                _context2.t0 = _context2.sent;\n\n              case 11:\n                userAddress = _context2.t0;\n                token = new ethers.Contract(tokenDomainData.verifyingContract, erc20Eip2612Abi, this.provider.getSigner());\n                _context2.next = 15;\n                return token.nonces(userAddress);\n\n              case 15:\n                nonce = _context2.sent;\n                permitDataToSign = {\n                  types: {\n                    EIP712Domain: tokenDomainType,\n                    Permit: config.eip2612PermitType\n                  },\n                  domain: tokenDomainData,\n                  primaryType: \"Permit\",\n                  message: {\n                    owner: userAddress,\n                    spender: spender,\n                    nonce: parseInt(nonce),\n                    value: value,\n                    deadline: parseInt(deadline)\n                  }\n                };\n                _context2.next = 19;\n                return this.provider.send(\"eth_signTypedData_v4\", [userAddress, JSON.stringify(permitDataToSign)]);\n\n              case 19:\n                result = _context2.sent;\n\n                _logMessage(\"success\", result);\n\n                signature = result.substring(2);\n                r = \"0x\" + signature.substring(0, 64);\n                s = \"0x\" + signature.substring(64, 128);\n                v = parseInt(signature.substring(128, 130), 16);\n                _context2.next = 27;\n                return token.permit(userAddress, spender, value, parseInt(deadline.toString()), v, r, s);\n\n              case 27:\n                tx = _context2.sent;\n                return _context2.abrupt(\"return\", tx);\n\n              case 31:\n                _context2.prev = 31;\n                _context2.t1 = _context2[\"catch\"](0);\n\n                _logMessage(_context2.t1);\n\n                throw _context2.t1;\n\n              case 35:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 31]]);\n      }));\n\n      function eip2612Permit(_x2) {\n        return _eip2612Permit.apply(this, arguments);\n      }\n\n      return eip2612Permit;\n    }()\n  }]);\n  return PermitClient;\n}();\n\nmodule.exports = PermitClient;"],"mappings":"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"},"metadata":{},"sourceType":"script"}