{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar ethers = require(\"ethers\");\nvar _require = require(\"./config\"),\n  config = _require.config;\nvar _require2 = require('./abis'),\n  baseWalletAbi = _require2.baseWalletAbi,\n  walletFactoryAbi = _require2.walletFactoryAbi,\n  entryPointAbi = _require2.entryPointAbi;\nfunction getSignatureParameters(signature) {\n  if (!ethers.utils.isHexString(signature)) {\n    throw new Error('Given value \"'.concat(signature, '\" is not a valid hex string.'));\n  }\n  var r = signature.slice(0, 66);\n  var s = \"0x\".concat(signature.slice(66, 130));\n  var v = \"0x\".concat(signature.slice(130, 132));\n  v = ethers.BigNumber.from(v).toNumber();\n  if (![27, 28].includes(v)) v += 27;\n  return {\n    r: r,\n    s: s,\n    v: v\n  };\n}\n/**\n * Class to provide methods for biconomy wallet deployment, signature building and sending the transaction\n */\n\nvar BiconomyWalletClient = /*#__PURE__*/function () {\n  function BiconomyWalletClient(_ref) {\n    var biconomyProvider = _ref.biconomyProvider,\n      provider = _ref.provider,\n      targetProvider = _ref.targetProvider,\n      biconomyAttributes = _ref.biconomyAttributes,\n      isSignerWithAccounts = _ref.isSignerWithAccounts,\n      walletFactoryAddress = _ref.walletFactoryAddress,\n      baseWalletAddress = _ref.baseWalletAddress,\n      entryPointAddress = _ref.entryPointAddress,\n      handlerAddress = _ref.handlerAddress,\n      networkId = _ref.networkId;\n    (0, _classCallCheck2[\"default\"])(this, BiconomyWalletClient);\n    this.engine = biconomyProvider; // Marked for removal\n\n    this.biconomyAttributes = biconomyAttributes;\n    this.isSignerWithAccounts = isSignerWithAccounts;\n    this.provider = provider;\n    this.targetProvider = targetProvider;\n    this.walletFactoryAddress = walletFactoryAddress;\n    this.baseWalletAddress = baseWalletAddress;\n    this.entryPointAddress = entryPointAddress;\n    this.handlerAddress = handlerAddress;\n    var providerOrSigner;\n    if (this.isSignerWithAccounts) {\n      providerOrSigner = this.provider.getSigner();\n    } else {\n      providerOrSigner = this.provider;\n    }\n    this.providerOrSigner = providerOrSigner;\n    this.networkId = networkId;\n    this.walletFactory = new ethers.Contract(this.walletFactoryAddress, walletFactoryAbi, this.providerOrSigner);\n    this.baseWallet = new ethers.Contract(this.baseWalletAddress, baseWalletAbi, this.providerOrSigner);\n  }\n  (0, _createClass2[\"default\"])(BiconomyWalletClient, [{\n    key: \"deployWallet\",\n    value: function () {\n      var _deployWallet = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(_ref2) {\n        var eoa, _ref2$index, index, walletAddress, executionData, dispatchProvider, txParams, tx;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                eoa = _ref2.eoa, _ref2$index = _ref2.index, index = _ref2$index === void 0 ? 0 : _ref2$index;\n                _context.next = 3;\n                return this.walletFactory.getAddressForCounterfactualWallet(eoa, index);\n              case 3:\n                walletAddress = _context.sent;\n                _context.next = 6;\n                return this.walletFactory.populateTransaction.deployCounterFactualWallet(eoa, this.entryPointAddress, this.handlerAddress, index);\n              case 6:\n                executionData = _context.sent;\n                dispatchProvider = this.engine.getEthersProvider();\n                txParams = {\n                  data: executionData.data,\n                  to: this.walletFactory.address,\n                  from: eoa\n                };\n                _context.prev = 9;\n                _context.next = 12;\n                return dispatchProvider.send(\"eth_sendTransaction\", [txParams]);\n              case 12:\n                tx = _context.sent;\n                _context.next = 19;\n                break;\n              case 15:\n                _context.prev = 15;\n                _context.t0 = _context[\"catch\"](9);\n                // handle conditional rejections in this stack trace\n                console.log(_context.t0);\n                throw _context.t0;\n              case 19:\n                return _context.abrupt(\"return\", walletAddress);\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[9, 15]]);\n      }));\n      function deployWallet(_x) {\n        return _deployWallet.apply(this, arguments);\n      }\n      return deployWallet;\n    }()\n  }, {\n    key: \"checkIfWalletExists\",\n    value: function () {\n      var _checkIfWalletExists = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(_ref3) {\n        var eoa, _ref3$index, index, walletFactoryAddress, walletFactory, _walletAddress, _doesWalletExist, walletAddress, doesWalletExist;\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                eoa = _ref3.eoa, _ref3$index = _ref3.index, index = _ref3$index === void 0 ? 0 : _ref3$index, walletFactoryAddress = _ref3.walletFactoryAddress;\n                if (!walletFactoryAddress) {\n                  _context2.next = 10;\n                  break;\n                }\n                walletFactory = new ethers.Contract(walletFactoryAddress, walletFactoryAbi, this.providerOrSigner);\n                _context2.next = 5;\n                return walletFactory.getAddressForCounterfactualWallet(eoa, index);\n              case 5:\n                _walletAddress = _context2.sent;\n                _context2.next = 8;\n                return this.walletFactory.isWalletExist(_walletAddress);\n              case 8:\n                _doesWalletExist = _context2.sent;\n                return _context2.abrupt(\"return\", {\n                  doesWalletExist: _doesWalletExist,\n                  walletAddress: _walletAddress\n                });\n              case 10:\n                _context2.next = 12;\n                return this.walletFactory.getAddressForCounterfactualWallet(eoa, index);\n              case 12:\n                walletAddress = _context2.sent;\n                _context2.next = 15;\n                return this.walletFactory.isWalletExist(walletAddress);\n              case 15:\n                doesWalletExist = _context2.sent;\n                return _context2.abrupt(\"return\", {\n                  doesWalletExist: doesWalletExist,\n                  walletAddress: walletAddress\n                });\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      function checkIfWalletExists(_x2) {\n        return _checkIfWalletExists.apply(this, arguments);\n      }\n      return checkIfWalletExists;\n    }()\n  }, {\n    key: \"checkIfWalletExistsAndDeploy\",\n    value: function () {\n      var _checkIfWalletExistsAndDeploy = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(_ref4) {\n        var eoa, webHookAttributes, _ref4$index, index, txHash, walletAddress, doesWalletExist, executionData, dispatchProvider, txParams;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                eoa = _ref4.eoa, webHookAttributes = _ref4.webHookAttributes, _ref4$index = _ref4.index, index = _ref4$index === void 0 ? 0 : _ref4$index;\n                _context3.next = 3;\n                return this.walletFactory.getAddressForCounterfactualWallet(eoa, index);\n              case 3:\n                walletAddress = _context3.sent;\n                _context3.next = 6;\n                return this.walletFactory.isWalletExist[walletAddress];\n              case 6:\n                doesWalletExist = _context3.sent;\n                this.walletFactory = this.walletFactory.connect(this.engine.getSignerByAddress(eoa));\n                if (doesWalletExist) {\n                  _context3.next = 25;\n                  break;\n                }\n                _context3.next = 11;\n                return this.walletFactory.populateTransaction.deployCounterFactualWallet(eoa, this.entryPointAddress, this.handlerAddress, index);\n              case 11:\n                executionData = _context3.sent;\n                dispatchProvider = this.engine.getEthersProvider();\n                if (webHookAttributes && webHookAttributes.webHookData) {\n                  webHookAttributes.webHookData.webwallet_address = eoa;\n                }\n                txParams = {\n                  data: executionData.data,\n                  to: this.walletFactory.address,\n                  from: eoa,\n                  webHookAttributes: webHookAttributes || null\n                };\n                _context3.prev = 15;\n                _context3.next = 18;\n                return dispatchProvider.send(\"eth_sendTransaction\", [txParams]);\n              case 18:\n                txHash = _context3.sent;\n                _context3.next = 25;\n                break;\n              case 21:\n                _context3.prev = 21;\n                _context3.t0 = _context3[\"catch\"](15);\n                // handle conditional rejections in this stack trace\n                console.log(_context3.t0);\n                throw _context3.t0;\n              case 25:\n                return _context3.abrupt(\"return\", {\n                  walletAddress: walletAddress,\n                  txHash: txHash\n                });\n              case 26:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[15, 21]]);\n      }));\n      function checkIfWalletExistsAndDeploy(_x3) {\n        return _checkIfWalletExistsAndDeploy.apply(this, arguments);\n      }\n      return checkIfWalletExistsAndDeploy;\n    }() // Gasless transaction\n    // gasPrice and baseGas will always be zero\n    // we would add separate ERC20 (Forward) payment handlers in sdk\n  }, {\n    key: \"buildExecTransaction\",\n    value: function () {\n      var _buildExecTransaction = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(_ref5) {\n        var data, to, walletAddress, _ref5$batchId, batchId, nonce;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                data = _ref5.data, to = _ref5.to, walletAddress = _ref5.walletAddress, _ref5$batchId = _ref5.batchId, batchId = _ref5$batchId === void 0 ? 0 : _ref5$batchId;\n                this.baseWallet = this.baseWallet.attach(walletAddress);\n                _context4.next = 4;\n                return this.baseWallet.getNonce(batchId);\n              case 4:\n                nonce = _context4.sent;\n                return _context4.abrupt(\"return\", {\n                  to: to,\n                  value: 0,\n                  data: data,\n                  operation: 0,\n                  targetTxGas: 0,\n                  baseGas: 0,\n                  gasPrice: 0,\n                  gasToken: config.ZERO_ADDRESS,\n                  refundReceiver: config.ZERO_ADDRESS,\n                  nonce: nonce\n                });\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n      function buildExecTransaction(_x4) {\n        return _buildExecTransaction.apply(this, arguments);\n      }\n      return buildExecTransaction;\n    }()\n  }, {\n    key: \"sendBiconomyWalletTransaction\",\n    value: function () {\n      var _sendBiconomyWalletTransaction = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(_ref6) {\n        var execTransactionBody, _ref6$batchId, batchId, walletAddress, signatureType, _ref6$signature, signature, webHookAttributes, transaction, refundInfo, transactionHash, _getSignatureParamete, r, s, v, executionData, dispatchProvider, owner, txParams, txHash;\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                execTransactionBody = _ref6.execTransactionBody, _ref6$batchId = _ref6.batchId, batchId = _ref6$batchId === void 0 ? 0 : _ref6$batchId, walletAddress = _ref6.walletAddress, signatureType = _ref6.signatureType, _ref6$signature = _ref6.signature, signature = _ref6$signature === void 0 ? null : _ref6$signature, webHookAttributes = _ref6.webHookAttributes;\n                if (this.isSignerWithAccounts) {\n                  _context5.next = 4;\n                  break;\n                }\n                if (signature) {\n                  _context5.next = 4;\n                  break;\n                }\n                throw new Error(\"Either pass signature param or pass a provider to Biconomy with user accounts information\");\n              case 4:\n                transaction = {\n                  to: execTransactionBody.to,\n                  value: execTransactionBody.value,\n                  data: execTransactionBody.data,\n                  operation: execTransactionBody.operation,\n                  targetTxGas: execTransactionBody.targetTxGas\n                };\n                refundInfo = {\n                  baseGas: execTransactionBody.baseGas,\n                  gasPrice: execTransactionBody.gasPrice,\n                  gasToken: execTransactionBody.gasToken,\n                  refundReceiver: execTransactionBody.refundReceiver\n                };\n                if (signature) {\n                  _context5.next = 23;\n                  break;\n                }\n                if (!(signatureType === 'PERSONAL_SIGN')) {\n                  _context5.next = 20;\n                  break;\n                }\n                _context5.next = 10;\n                return this.baseWallet.getTransactionHash(execTransactionBody.to, execTransactionBody.value, execTransactionBody.data, execTransactionBody.operation, execTransactionBody.targetTxGas, execTransactionBody.baseGas, execTransactionBody.gasPrice, execTransactionBody.gasToken, execTransactionBody.refundReceiver, execTransactionBody.nonce);\n              case 10:\n                transactionHash = _context5.sent;\n                _context5.next = 13;\n                return this.provider.getSigner().signMessage(ethers.utils.arrayify(transactionHash));\n              case 13:\n                signature = _context5.sent;\n                _getSignatureParamete = getSignatureParameters(signature), r = _getSignatureParamete.r, s = _getSignatureParamete.s, v = _getSignatureParamete.v;\n                v += 4;\n                v = ethers.BigNumber.from(v).toHexString();\n                signature = r + s.slice(2) + v.slice(2);\n                _context5.next = 23;\n                break;\n              case 20:\n                _context5.next = 22;\n                return this.provider.getSigner()._signTypedData({\n                  verifyingContract: walletAddress,\n                  chainId: this.networkId\n                }, config.EIP712_WALLET_TX_TYPE, execTransactionBody);\n              case 22:\n                signature = _context5.sent;\n              case 23:\n                this.baseWallet = this.baseWallet.attach(walletAddress);\n                this.baseWallet = this.baseWallet.connect(this.engine.getSignerByAddress(walletAddress));\n                _context5.next = 27;\n                return this.baseWallet.populateTransaction.execTransaction(transaction, batchId, refundInfo, signature);\n              case 27:\n                executionData = _context5.sent;\n                dispatchProvider = this.engine.getEthersProvider(); //append webwallet_address key in this object webHookAttributes\n\n                _context5.next = 31;\n                return this.baseWallet.owner();\n              case 31:\n                owner = _context5.sent;\n\n                //eoa\n                if (webHookAttributes && webHookAttributes.webHookData) {\n                  webHookAttributes.webHookData.webwallet_address = owner;\n                }\n                txParams = {\n                  data: executionData.data,\n                  to: this.baseWallet.address,\n                  from: owner,\n                  webHookAttributes: webHookAttributes || null\n                };\n                _context5.prev = 34;\n                _context5.next = 37;\n                return dispatchProvider.send(\"eth_sendTransaction\", [txParams]);\n              case 37:\n                txHash = _context5.sent;\n                _context5.next = 44;\n                break;\n              case 40:\n                _context5.prev = 40;\n                _context5.t0 = _context5[\"catch\"](34);\n                // handle conditional rejections in this stack trace\n                console.log(_context5.t0);\n                throw _context5.t0;\n              case 44:\n                return _context5.abrupt(\"return\", txHash);\n              case 45:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[34, 40]]);\n      }));\n      function sendBiconomyWalletTransaction(_x5) {\n        return _sendBiconomyWalletTransaction.apply(this, arguments);\n      }\n      return sendBiconomyWalletTransaction;\n    }()\n  }]);\n  return BiconomyWalletClient;\n}();\nmodule.exports = BiconomyWalletClient;","map":{"version":3,"names":["_interopRequireDefault","require","_regenerator","_asyncToGenerator2","_classCallCheck2","_createClass2","ethers","_require","config","_require2","baseWalletAbi","walletFactoryAbi","entryPointAbi","getSignatureParameters","signature","utils","isHexString","Error","concat","r","slice","s","v","BigNumber","from","toNumber","includes","BiconomyWalletClient","_ref","biconomyProvider","provider","targetProvider","biconomyAttributes","isSignerWithAccounts","walletFactoryAddress","baseWalletAddress","entryPointAddress","handlerAddress","networkId","engine","providerOrSigner","getSigner","walletFactory","Contract","baseWallet","key","value","_deployWallet","mark","_callee","_ref2","eoa","_ref2$index","index","walletAddress","executionData","dispatchProvider","txParams","tx","wrap","_callee$","_context","prev","next","getAddressForCounterfactualWallet","sent","populateTransaction","deployCounterFactualWallet","getEthersProvider","data","to","address","send","t0","console","log","abrupt","stop","deployWallet","_x","apply","arguments","_checkIfWalletExists","_callee2","_ref3","_ref3$index","_walletAddress","_doesWalletExist","doesWalletExist","_callee2$","_context2","isWalletExist","checkIfWalletExists","_x2","_checkIfWalletExistsAndDeploy","_callee3","_ref4","webHookAttributes","_ref4$index","txHash","_callee3$","_context3","connect","getSignerByAddress","webHookData","webwallet_address","checkIfWalletExistsAndDeploy","_x3","_buildExecTransaction","_callee4","_ref5","_ref5$batchId","batchId","nonce","_callee4$","_context4","attach","getNonce","operation","targetTxGas","baseGas","gasPrice","gasToken","ZERO_ADDRESS","refundReceiver","buildExecTransaction","_x4","_sendBiconomyWalletTransaction","_callee5","_ref6","execTransactionBody","_ref6$batchId","signatureType","_ref6$signature","transaction","refundInfo","transactionHash","_getSignatureParamete","owner","_callee5$","_context5","getTransactionHash","signMessage","arrayify","toHexString","_signTypedData","verifyingContract","chainId","EIP712_WALLET_TX_TYPE","execTransaction","sendBiconomyWalletTransaction","_x5","module","exports"],"sources":["/home/hayden/workplace/dapp-demo/node_modules/@biconomy/mexa/common-js/BiconomyWalletClient.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar ethers = require(\"ethers\");\n\nvar _require = require(\"./config\"),\n    config = _require.config;\n\nvar _require2 = require('./abis'),\n    baseWalletAbi = _require2.baseWalletAbi,\n    walletFactoryAbi = _require2.walletFactoryAbi,\n    entryPointAbi = _require2.entryPointAbi;\n\nfunction getSignatureParameters(signature) {\n  if (!ethers.utils.isHexString(signature)) {\n    throw new Error('Given value \"'.concat(signature, '\" is not a valid hex string.'));\n  }\n\n  var r = signature.slice(0, 66);\n  var s = \"0x\".concat(signature.slice(66, 130));\n  var v = \"0x\".concat(signature.slice(130, 132));\n  v = ethers.BigNumber.from(v).toNumber();\n  if (![27, 28].includes(v)) v += 27;\n  return {\n    r: r,\n    s: s,\n    v: v\n  };\n}\n/**\n * Class to provide methods for biconomy wallet deployment, signature building and sending the transaction\n */\n\n\nvar BiconomyWalletClient = /*#__PURE__*/function () {\n  function BiconomyWalletClient(_ref) {\n    var biconomyProvider = _ref.biconomyProvider,\n        provider = _ref.provider,\n        targetProvider = _ref.targetProvider,\n        biconomyAttributes = _ref.biconomyAttributes,\n        isSignerWithAccounts = _ref.isSignerWithAccounts,\n        walletFactoryAddress = _ref.walletFactoryAddress,\n        baseWalletAddress = _ref.baseWalletAddress,\n        entryPointAddress = _ref.entryPointAddress,\n        handlerAddress = _ref.handlerAddress,\n        networkId = _ref.networkId;\n    (0, _classCallCheck2[\"default\"])(this, BiconomyWalletClient);\n    this.engine = biconomyProvider; // Marked for removal\n\n    this.biconomyAttributes = biconomyAttributes;\n    this.isSignerWithAccounts = isSignerWithAccounts;\n    this.provider = provider;\n    this.targetProvider = targetProvider;\n    this.walletFactoryAddress = walletFactoryAddress;\n    this.baseWalletAddress = baseWalletAddress;\n    this.entryPointAddress = entryPointAddress;\n    this.handlerAddress = handlerAddress;\n    var providerOrSigner;\n\n    if (this.isSignerWithAccounts) {\n      providerOrSigner = this.provider.getSigner();\n    } else {\n      providerOrSigner = this.provider;\n    }\n\n    this.providerOrSigner = providerOrSigner;\n    this.networkId = networkId;\n    this.walletFactory = new ethers.Contract(this.walletFactoryAddress, walletFactoryAbi, this.providerOrSigner);\n    this.baseWallet = new ethers.Contract(this.baseWalletAddress, baseWalletAbi, this.providerOrSigner);\n  }\n\n  (0, _createClass2[\"default\"])(BiconomyWalletClient, [{\n    key: \"deployWallet\",\n    value: function () {\n      var _deployWallet = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(_ref2) {\n        var eoa, _ref2$index, index, walletAddress, executionData, dispatchProvider, txParams, tx;\n\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                eoa = _ref2.eoa, _ref2$index = _ref2.index, index = _ref2$index === void 0 ? 0 : _ref2$index;\n                _context.next = 3;\n                return this.walletFactory.getAddressForCounterfactualWallet(eoa, index);\n\n              case 3:\n                walletAddress = _context.sent;\n                _context.next = 6;\n                return this.walletFactory.populateTransaction.deployCounterFactualWallet(eoa, this.entryPointAddress, this.handlerAddress, index);\n\n              case 6:\n                executionData = _context.sent;\n                dispatchProvider = this.engine.getEthersProvider();\n                txParams = {\n                  data: executionData.data,\n                  to: this.walletFactory.address,\n                  from: eoa\n                };\n                _context.prev = 9;\n                _context.next = 12;\n                return dispatchProvider.send(\"eth_sendTransaction\", [txParams]);\n\n              case 12:\n                tx = _context.sent;\n                _context.next = 19;\n                break;\n\n              case 15:\n                _context.prev = 15;\n                _context.t0 = _context[\"catch\"](9);\n                // handle conditional rejections in this stack trace\n                console.log(_context.t0);\n                throw _context.t0;\n\n              case 19:\n                return _context.abrupt(\"return\", walletAddress);\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[9, 15]]);\n      }));\n\n      function deployWallet(_x) {\n        return _deployWallet.apply(this, arguments);\n      }\n\n      return deployWallet;\n    }()\n  }, {\n    key: \"checkIfWalletExists\",\n    value: function () {\n      var _checkIfWalletExists = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(_ref3) {\n        var eoa, _ref3$index, index, walletFactoryAddress, walletFactory, _walletAddress, _doesWalletExist, walletAddress, doesWalletExist;\n\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                eoa = _ref3.eoa, _ref3$index = _ref3.index, index = _ref3$index === void 0 ? 0 : _ref3$index, walletFactoryAddress = _ref3.walletFactoryAddress;\n\n                if (!walletFactoryAddress) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                walletFactory = new ethers.Contract(walletFactoryAddress, walletFactoryAbi, this.providerOrSigner);\n                _context2.next = 5;\n                return walletFactory.getAddressForCounterfactualWallet(eoa, index);\n\n              case 5:\n                _walletAddress = _context2.sent;\n                _context2.next = 8;\n                return this.walletFactory.isWalletExist(_walletAddress);\n\n              case 8:\n                _doesWalletExist = _context2.sent;\n                return _context2.abrupt(\"return\", {\n                  doesWalletExist: _doesWalletExist,\n                  walletAddress: _walletAddress\n                });\n\n              case 10:\n                _context2.next = 12;\n                return this.walletFactory.getAddressForCounterfactualWallet(eoa, index);\n\n              case 12:\n                walletAddress = _context2.sent;\n                _context2.next = 15;\n                return this.walletFactory.isWalletExist(walletAddress);\n\n              case 15:\n                doesWalletExist = _context2.sent;\n                return _context2.abrupt(\"return\", {\n                  doesWalletExist: doesWalletExist,\n                  walletAddress: walletAddress\n                });\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function checkIfWalletExists(_x2) {\n        return _checkIfWalletExists.apply(this, arguments);\n      }\n\n      return checkIfWalletExists;\n    }()\n  }, {\n    key: \"checkIfWalletExistsAndDeploy\",\n    value: function () {\n      var _checkIfWalletExistsAndDeploy = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(_ref4) {\n        var eoa, webHookAttributes, _ref4$index, index, txHash, walletAddress, doesWalletExist, executionData, dispatchProvider, txParams;\n\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                eoa = _ref4.eoa, webHookAttributes = _ref4.webHookAttributes, _ref4$index = _ref4.index, index = _ref4$index === void 0 ? 0 : _ref4$index;\n                _context3.next = 3;\n                return this.walletFactory.getAddressForCounterfactualWallet(eoa, index);\n\n              case 3:\n                walletAddress = _context3.sent;\n                _context3.next = 6;\n                return this.walletFactory.isWalletExist[walletAddress];\n\n              case 6:\n                doesWalletExist = _context3.sent;\n                this.walletFactory = this.walletFactory.connect(this.engine.getSignerByAddress(eoa));\n\n                if (doesWalletExist) {\n                  _context3.next = 25;\n                  break;\n                }\n\n                _context3.next = 11;\n                return this.walletFactory.populateTransaction.deployCounterFactualWallet(eoa, this.entryPointAddress, this.handlerAddress, index);\n\n              case 11:\n                executionData = _context3.sent;\n                dispatchProvider = this.engine.getEthersProvider();\n\n                if (webHookAttributes && webHookAttributes.webHookData) {\n                  webHookAttributes.webHookData.webwallet_address = eoa;\n                }\n\n                txParams = {\n                  data: executionData.data,\n                  to: this.walletFactory.address,\n                  from: eoa,\n                  webHookAttributes: webHookAttributes || null\n                };\n                _context3.prev = 15;\n                _context3.next = 18;\n                return dispatchProvider.send(\"eth_sendTransaction\", [txParams]);\n\n              case 18:\n                txHash = _context3.sent;\n                _context3.next = 25;\n                break;\n\n              case 21:\n                _context3.prev = 21;\n                _context3.t0 = _context3[\"catch\"](15);\n                // handle conditional rejections in this stack trace\n                console.log(_context3.t0);\n                throw _context3.t0;\n\n              case 25:\n                return _context3.abrupt(\"return\", {\n                  walletAddress: walletAddress,\n                  txHash: txHash\n                });\n\n              case 26:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[15, 21]]);\n      }));\n\n      function checkIfWalletExistsAndDeploy(_x3) {\n        return _checkIfWalletExistsAndDeploy.apply(this, arguments);\n      }\n\n      return checkIfWalletExistsAndDeploy;\n    }() // Gasless transaction\n    // gasPrice and baseGas will always be zero\n    // we would add separate ERC20 (Forward) payment handlers in sdk\n\n  }, {\n    key: \"buildExecTransaction\",\n    value: function () {\n      var _buildExecTransaction = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(_ref5) {\n        var data, to, walletAddress, _ref5$batchId, batchId, nonce;\n\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                data = _ref5.data, to = _ref5.to, walletAddress = _ref5.walletAddress, _ref5$batchId = _ref5.batchId, batchId = _ref5$batchId === void 0 ? 0 : _ref5$batchId;\n                this.baseWallet = this.baseWallet.attach(walletAddress);\n                _context4.next = 4;\n                return this.baseWallet.getNonce(batchId);\n\n              case 4:\n                nonce = _context4.sent;\n                return _context4.abrupt(\"return\", {\n                  to: to,\n                  value: 0,\n                  data: data,\n                  operation: 0,\n                  targetTxGas: 0,\n                  baseGas: 0,\n                  gasPrice: 0,\n                  gasToken: config.ZERO_ADDRESS,\n                  refundReceiver: config.ZERO_ADDRESS,\n                  nonce: nonce\n                });\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function buildExecTransaction(_x4) {\n        return _buildExecTransaction.apply(this, arguments);\n      }\n\n      return buildExecTransaction;\n    }()\n  }, {\n    key: \"sendBiconomyWalletTransaction\",\n    value: function () {\n      var _sendBiconomyWalletTransaction = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(_ref6) {\n        var execTransactionBody, _ref6$batchId, batchId, walletAddress, signatureType, _ref6$signature, signature, webHookAttributes, transaction, refundInfo, transactionHash, _getSignatureParamete, r, s, v, executionData, dispatchProvider, owner, txParams, txHash;\n\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                execTransactionBody = _ref6.execTransactionBody, _ref6$batchId = _ref6.batchId, batchId = _ref6$batchId === void 0 ? 0 : _ref6$batchId, walletAddress = _ref6.walletAddress, signatureType = _ref6.signatureType, _ref6$signature = _ref6.signature, signature = _ref6$signature === void 0 ? null : _ref6$signature, webHookAttributes = _ref6.webHookAttributes;\n\n                if (this.isSignerWithAccounts) {\n                  _context5.next = 4;\n                  break;\n                }\n\n                if (signature) {\n                  _context5.next = 4;\n                  break;\n                }\n\n                throw new Error(\"Either pass signature param or pass a provider to Biconomy with user accounts information\");\n\n              case 4:\n                transaction = {\n                  to: execTransactionBody.to,\n                  value: execTransactionBody.value,\n                  data: execTransactionBody.data,\n                  operation: execTransactionBody.operation,\n                  targetTxGas: execTransactionBody.targetTxGas\n                };\n                refundInfo = {\n                  baseGas: execTransactionBody.baseGas,\n                  gasPrice: execTransactionBody.gasPrice,\n                  gasToken: execTransactionBody.gasToken,\n                  refundReceiver: execTransactionBody.refundReceiver\n                };\n\n                if (signature) {\n                  _context5.next = 23;\n                  break;\n                }\n\n                if (!(signatureType === 'PERSONAL_SIGN')) {\n                  _context5.next = 20;\n                  break;\n                }\n\n                _context5.next = 10;\n                return this.baseWallet.getTransactionHash(execTransactionBody.to, execTransactionBody.value, execTransactionBody.data, execTransactionBody.operation, execTransactionBody.targetTxGas, execTransactionBody.baseGas, execTransactionBody.gasPrice, execTransactionBody.gasToken, execTransactionBody.refundReceiver, execTransactionBody.nonce);\n\n              case 10:\n                transactionHash = _context5.sent;\n                _context5.next = 13;\n                return this.provider.getSigner().signMessage(ethers.utils.arrayify(transactionHash));\n\n              case 13:\n                signature = _context5.sent;\n                _getSignatureParamete = getSignatureParameters(signature), r = _getSignatureParamete.r, s = _getSignatureParamete.s, v = _getSignatureParamete.v;\n                v += 4;\n                v = ethers.BigNumber.from(v).toHexString();\n                signature = r + s.slice(2) + v.slice(2);\n                _context5.next = 23;\n                break;\n\n              case 20:\n                _context5.next = 22;\n                return this.provider.getSigner()._signTypedData({\n                  verifyingContract: walletAddress,\n                  chainId: this.networkId\n                }, config.EIP712_WALLET_TX_TYPE, execTransactionBody);\n\n              case 22:\n                signature = _context5.sent;\n\n              case 23:\n                this.baseWallet = this.baseWallet.attach(walletAddress);\n                this.baseWallet = this.baseWallet.connect(this.engine.getSignerByAddress(walletAddress));\n                _context5.next = 27;\n                return this.baseWallet.populateTransaction.execTransaction(transaction, batchId, refundInfo, signature);\n\n              case 27:\n                executionData = _context5.sent;\n                dispatchProvider = this.engine.getEthersProvider(); //append webwallet_address key in this object webHookAttributes\n\n                _context5.next = 31;\n                return this.baseWallet.owner();\n\n              case 31:\n                owner = _context5.sent;\n\n                //eoa\n                if (webHookAttributes && webHookAttributes.webHookData) {\n                  webHookAttributes.webHookData.webwallet_address = owner;\n                }\n\n                txParams = {\n                  data: executionData.data,\n                  to: this.baseWallet.address,\n                  from: owner,\n                  webHookAttributes: webHookAttributes || null\n                };\n                _context5.prev = 34;\n                _context5.next = 37;\n                return dispatchProvider.send(\"eth_sendTransaction\", [txParams]);\n\n              case 37:\n                txHash = _context5.sent;\n                _context5.next = 44;\n                break;\n\n              case 40:\n                _context5.prev = 40;\n                _context5.t0 = _context5[\"catch\"](34);\n                // handle conditional rejections in this stack trace\n                console.log(_context5.t0);\n                throw _context5.t0;\n\n              case 44:\n                return _context5.abrupt(\"return\", txHash);\n\n              case 45:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[34, 40]]);\n      }));\n\n      function sendBiconomyWalletTransaction(_x5) {\n        return _sendBiconomyWalletTransaction.apply(this, arguments);\n      }\n\n      return sendBiconomyWalletTransaction;\n    }()\n  }]);\n  return BiconomyWalletClient;\n}();\n\nmodule.exports = BiconomyWalletClient;"],"mappings":"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"},"metadata":{},"sourceType":"script"}