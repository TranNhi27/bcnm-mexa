{"ast":null,"code":"\"use strict\";\n\nvar config = {};\nconfig.version = 'v1';\nconfig.version2 = 'v2';\nconfig.signTypedV3Method = \"eth_signTypedData_v3\";\nconfig.loginDomainName = \"Biconomy Login\";\nconfig.loginVersion = \"1\";\nconfig.eip712SigVersion = \"1\";\nconfig.eip712DomainName = \"Biconomy Meta Transaction\";\nconfig.eip712VerifyingContract = \"0x3457dC2A8Ff1d3FcC45eAd532CA1740f5c477160\";\nconfig.daiDomainName = \"Dai Stablecoin\";\nconfig.daiVersion = \"1\";\nconfig.forwarderDomainName = \"Biconomy Forwarder\";\nconfig.forwarderVersion = \"1\";\nconfig.baseURL = \"https://api.biconomy.io\";\nconfig.nativeMetaTxUrl = \"/api/\".concat(config.version2, \"/meta-tx/native\");\nconfig.userLoginPath = \"/api/\".concat(config.version2, \"/dapp-user/login\");\nconfig.withdrawFundsUrl = \"/api/\".concat(config.version2, \"/meta-tx/withdraw\");\nconfig.getUserContractPath = \"/api/\".concat(config.version2, \"/dapp-user/getUserContract\");\nconfig.MESSAGE_TO_SIGN = 'Sign message to prove the ownership of your account with counter ';\nconfig.WITHDRAW_MESSAGE_TO_SIGN = 'Provide your signature to withdraw funds with counter ';\nconfig.USER_ACCOUNT = \"BUA\";\nconfig.USER_CONTRACT = \"BUC\";\nconfig.JSON_RPC_VERSION = '2.0';\nconfig.LOGIN_MESSAGE_TO_SIGN = \"Sign message to login to Biconomy with counter \";\nconfig.ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\nconfig.PAYMENT_TOKEN_CONTRACT = config.ZERO_ADDRESS;\nconfig.PAYMENT_TOKEN_AMOUNT = 0;\nconfig.NONCE_BATCH_ID = 0;\nconfig.EXPIRY = 0;\nconfig.BASE_GAS = 0;\nconfig.RELAYER_ADDRESS = config.ZERO_ADDRESS;\nconfig.TOKEN_CONTRACT_ADDRESS = config.ZERO_ADDRESS;\nconfig.DEFAULT_RELAYER_PAYMENT_TOKEN_ADDRESS = config.ZERO_ADDRESS;\nconfig.DEFAULT_RELAYER_PAYMENT_AMOUNT = 0;\nconfig.DEFAULT_DESCRIPTION = \"Smart Contract Interaction\";\nconfig.DAI = \"DAI_Permit\";\nconfig.EIP2612 = \"EIP2612_Permit\";\nconfig.EIP712_WALLET_TX_TYPE = {\n  // \"SafeTx(address to,uint256 value,bytes data,uint8 operation,uint256 targetTxGas,uint256 baseGas,uint256 gasPrice,address gasToken,address refundReceiver,uint256 nonce)\"\n  WalletTx: [{\n    type: \"address\",\n    name: \"to\"\n  }, {\n    type: \"uint256\",\n    name: \"value\"\n  }, {\n    type: \"bytes\",\n    name: \"data\"\n  }, {\n    type: \"uint8\",\n    name: \"operation\"\n  }, {\n    type: \"uint256\",\n    name: \"targetTxGas\"\n  }, {\n    type: \"uint256\",\n    name: \"baseGas\"\n  }, {\n    type: \"uint256\",\n    name: \"gasPrice\"\n  }, {\n    type: \"address\",\n    name: \"gasToken\"\n  }, {\n    type: \"address\",\n    name: \"refundReceiver\"\n  }, {\n    type: \"uint256\",\n    name: \"nonce\"\n  }]\n};\nconfig.handleSignedTxUrl = \"/api/\".concat(config.version2, \"/meta-tx/sendSignedTx\");\nconfig.logsEnabled = false;\nvar EVENTS = {\n  SMART_CONTRACT_DATA_READY: 'smart_contract_data_ready',\n  DAPP_API_DATA_READY: 'dapp_api_data_ready',\n  LOGIN_CONFIRMATION: 'login_confirmation',\n  BICONOMY_ERROR: 'biconomy_error',\n  HELPER_CLENTS_READY: 'permit_and_ercforwarder_clients_ready'\n};\nvar RESPONSE_CODES = {\n  ERROR_RESPONSE: 'B500',\n  API_NOT_FOUND: 'B501',\n  USER_CONTRACT_NOT_FOUND: 'B502',\n  USER_NOT_LOGGED_IN: 'B503',\n  USER_ACCOUNT_NOT_FOUND: 'B504',\n  NETWORK_ID_MISMATCH: 'B505',\n  BICONOMY_NOT_INITIALIZED: 'B506',\n  NETWORK_ID_NOT_FOUND: 'B507',\n  SMART_CONTRACT_NOT_FOUND: 'B508',\n  DAPP_NOT_FOUND: 'B509',\n  INVALID_PAYLOAD: 'B510',\n  DASHBOARD_DATA_MISMATCH: 'B511',\n  SUCCESS_RESPONSE: 'B200',\n  USER_CONTRACT_CREATION_FAILED: 'B512',\n  EVENT_NOT_SUPPORTED: 'B513',\n  INVALID_DATA: 'B514',\n  INVALID_OPERATION: 'B515',\n  WRONG_ABI: 'B516',\n  CONDITIONS_NOT_SATISFIED: 'B517'\n}; // could get these from sys info call\n\nconfig.forwardRequestType = [{\n  name: 'from',\n  type: 'address'\n}, {\n  name: 'to',\n  type: 'address'\n}, {\n  name: 'token',\n  type: 'address'\n}, {\n  name: 'txGas',\n  type: 'uint256'\n}, {\n  name: 'tokenGasPrice',\n  type: 'uint256'\n}, {\n  name: 'batchId',\n  type: 'uint256'\n}, {\n  name: 'batchNonce',\n  type: 'uint256'\n}, {\n  name: 'deadline',\n  type: 'uint256'\n}, {\n  name: 'data',\n  type: 'bytes'\n}];\nconfig.customForwardRequestType = [{\n  name: 'warning',\n  type: 'string'\n}, {\n  name: 'info',\n  type: 'string'\n}, {\n  name: 'action',\n  type: 'string'\n}, {\n  name: 'request',\n  type: 'ERC20ForwardRequest'\n}];\nconfig.daiPermitType = [{\n  name: \"holder\",\n  type: \"address\"\n}, {\n  name: \"spender\",\n  type: \"address\"\n}, {\n  name: \"nonce\",\n  type: \"uint256\"\n}, {\n  name: \"expiry\",\n  type: \"uint256\"\n}, {\n  name: \"allowed\",\n  type: \"bool\"\n}];\nconfig.eip2612PermitType = [{\n  name: \"owner\",\n  type: \"address\"\n}, {\n  name: \"spender\",\n  type: \"address\"\n}, {\n  name: \"value\",\n  type: \"uint256\"\n}, {\n  name: \"nonce\",\n  type: \"uint256\"\n}, {\n  name: \"deadline\",\n  type: \"uint256\"\n}]; // This domain type is used in Permit Client where chainId needs to be preserved\n\nconfig.domainType = [{\n  name: \"name\",\n  type: \"string\"\n}, {\n  name: \"version\",\n  type: \"string\"\n}, {\n  name: \"chainId\",\n  type: \"uint256\"\n}, {\n  name: \"verifyingContract\",\n  type: \"address\"\n}];\nvar BICONOMY_RESPONSE_CODES = {\n  SUCCESS: 200,\n  ACTION_COMPLETE: 143,\n  USER_CONTRACT_NOT_FOUND: 148,\n  ERROR_RESPONSE: 144,\n  CONDITIONS_NOT_SATISFIED: 400\n};\nvar HTTP_CODES = {\n  OK: 200,\n  INTERNAL_SERVER_ERROR: 500,\n  NOT_FOUND: 404,\n  CONFLICT: 409,\n  EXPECTATION_FAILED: 417\n};\nvar RESPONSE_BODY_CODES = {\n  OK: 200,\n  DAPP_LIMIT_REACHED: 150,\n  USER_LIMIT_REACHED: 151,\n  API_LIMIT_REACHED: 152,\n  GAS_ESTIMATION_FAILED: 417,\n  INTERNAL_ERROR: 500,\n  NOT_FOUND: 404\n};\nvar STATUS = {\n  INIT: 'init',\n  BICONOMY_READY: 'biconomy_ready',\n  NO_DATA: 'no_data'\n};\nconfig.SCW = \"SCW\";\nmodule.exports = {\n  config: config,\n  EVENTS: EVENTS,\n  RESPONSE_CODES: RESPONSE_CODES,\n  HTTP_CODES: HTTP_CODES,\n  RESPONSE_BODY_CODES: RESPONSE_BODY_CODES,\n  BICONOMY_RESPONSE_CODES: BICONOMY_RESPONSE_CODES,\n  STATUS: STATUS\n};","map":{"version":3,"names":["config","version","version2","signTypedV3Method","loginDomainName","loginVersion","eip712SigVersion","eip712DomainName","eip712VerifyingContract","daiDomainName","daiVersion","forwarderDomainName","forwarderVersion","baseURL","nativeMetaTxUrl","concat","userLoginPath","withdrawFundsUrl","getUserContractPath","MESSAGE_TO_SIGN","WITHDRAW_MESSAGE_TO_SIGN","USER_ACCOUNT","USER_CONTRACT","JSON_RPC_VERSION","LOGIN_MESSAGE_TO_SIGN","ZERO_ADDRESS","PAYMENT_TOKEN_CONTRACT","PAYMENT_TOKEN_AMOUNT","NONCE_BATCH_ID","EXPIRY","BASE_GAS","RELAYER_ADDRESS","TOKEN_CONTRACT_ADDRESS","DEFAULT_RELAYER_PAYMENT_TOKEN_ADDRESS","DEFAULT_RELAYER_PAYMENT_AMOUNT","DEFAULT_DESCRIPTION","DAI","EIP2612","EIP712_WALLET_TX_TYPE","WalletTx","type","name","handleSignedTxUrl","logsEnabled","EVENTS","SMART_CONTRACT_DATA_READY","DAPP_API_DATA_READY","LOGIN_CONFIRMATION","BICONOMY_ERROR","HELPER_CLENTS_READY","RESPONSE_CODES","ERROR_RESPONSE","API_NOT_FOUND","USER_CONTRACT_NOT_FOUND","USER_NOT_LOGGED_IN","USER_ACCOUNT_NOT_FOUND","NETWORK_ID_MISMATCH","BICONOMY_NOT_INITIALIZED","NETWORK_ID_NOT_FOUND","SMART_CONTRACT_NOT_FOUND","DAPP_NOT_FOUND","INVALID_PAYLOAD","DASHBOARD_DATA_MISMATCH","SUCCESS_RESPONSE","USER_CONTRACT_CREATION_FAILED","EVENT_NOT_SUPPORTED","INVALID_DATA","INVALID_OPERATION","WRONG_ABI","CONDITIONS_NOT_SATISFIED","forwardRequestType","customForwardRequestType","daiPermitType","eip2612PermitType","domainType","BICONOMY_RESPONSE_CODES","SUCCESS","ACTION_COMPLETE","HTTP_CODES","OK","INTERNAL_SERVER_ERROR","NOT_FOUND","CONFLICT","EXPECTATION_FAILED","RESPONSE_BODY_CODES","DAPP_LIMIT_REACHED","USER_LIMIT_REACHED","API_LIMIT_REACHED","GAS_ESTIMATION_FAILED","INTERNAL_ERROR","STATUS","INIT","BICONOMY_READY","NO_DATA","SCW","module","exports"],"sources":["/home/hayden/workplace/dapp-demo/node_modules/@biconomy/mexa/common-js/config.js"],"sourcesContent":["\"use strict\";\n\nvar config = {};\nconfig.version = 'v1';\nconfig.version2 = 'v2';\nconfig.signTypedV3Method = \"eth_signTypedData_v3\";\nconfig.loginDomainName = \"Biconomy Login\";\nconfig.loginVersion = \"1\";\nconfig.eip712SigVersion = \"1\";\nconfig.eip712DomainName = \"Biconomy Meta Transaction\";\nconfig.eip712VerifyingContract = \"0x3457dC2A8Ff1d3FcC45eAd532CA1740f5c477160\";\nconfig.daiDomainName = \"Dai Stablecoin\";\nconfig.daiVersion = \"1\";\nconfig.forwarderDomainName = \"Biconomy Forwarder\";\nconfig.forwarderVersion = \"1\";\nconfig.baseURL = \"https://api.biconomy.io\";\nconfig.nativeMetaTxUrl = \"/api/\".concat(config.version2, \"/meta-tx/native\");\nconfig.userLoginPath = \"/api/\".concat(config.version2, \"/dapp-user/login\");\nconfig.withdrawFundsUrl = \"/api/\".concat(config.version2, \"/meta-tx/withdraw\");\nconfig.getUserContractPath = \"/api/\".concat(config.version2, \"/dapp-user/getUserContract\");\nconfig.MESSAGE_TO_SIGN = 'Sign message to prove the ownership of your account with counter ';\nconfig.WITHDRAW_MESSAGE_TO_SIGN = 'Provide your signature to withdraw funds with counter ';\nconfig.USER_ACCOUNT = \"BUA\";\nconfig.USER_CONTRACT = \"BUC\";\nconfig.JSON_RPC_VERSION = '2.0';\nconfig.LOGIN_MESSAGE_TO_SIGN = \"Sign message to login to Biconomy with counter \";\nconfig.ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\nconfig.PAYMENT_TOKEN_CONTRACT = config.ZERO_ADDRESS;\nconfig.PAYMENT_TOKEN_AMOUNT = 0;\nconfig.NONCE_BATCH_ID = 0;\nconfig.EXPIRY = 0;\nconfig.BASE_GAS = 0;\nconfig.RELAYER_ADDRESS = config.ZERO_ADDRESS;\nconfig.TOKEN_CONTRACT_ADDRESS = config.ZERO_ADDRESS;\nconfig.DEFAULT_RELAYER_PAYMENT_TOKEN_ADDRESS = config.ZERO_ADDRESS;\nconfig.DEFAULT_RELAYER_PAYMENT_AMOUNT = 0;\nconfig.DEFAULT_DESCRIPTION = \"Smart Contract Interaction\";\nconfig.DAI = \"DAI_Permit\";\nconfig.EIP2612 = \"EIP2612_Permit\";\nconfig.EIP712_WALLET_TX_TYPE = {\n  // \"SafeTx(address to,uint256 value,bytes data,uint8 operation,uint256 targetTxGas,uint256 baseGas,uint256 gasPrice,address gasToken,address refundReceiver,uint256 nonce)\"\n  WalletTx: [{\n    type: \"address\",\n    name: \"to\"\n  }, {\n    type: \"uint256\",\n    name: \"value\"\n  }, {\n    type: \"bytes\",\n    name: \"data\"\n  }, {\n    type: \"uint8\",\n    name: \"operation\"\n  }, {\n    type: \"uint256\",\n    name: \"targetTxGas\"\n  }, {\n    type: \"uint256\",\n    name: \"baseGas\"\n  }, {\n    type: \"uint256\",\n    name: \"gasPrice\"\n  }, {\n    type: \"address\",\n    name: \"gasToken\"\n  }, {\n    type: \"address\",\n    name: \"refundReceiver\"\n  }, {\n    type: \"uint256\",\n    name: \"nonce\"\n  }]\n};\nconfig.handleSignedTxUrl = \"/api/\".concat(config.version2, \"/meta-tx/sendSignedTx\");\nconfig.logsEnabled = false;\nvar EVENTS = {\n  SMART_CONTRACT_DATA_READY: 'smart_contract_data_ready',\n  DAPP_API_DATA_READY: 'dapp_api_data_ready',\n  LOGIN_CONFIRMATION: 'login_confirmation',\n  BICONOMY_ERROR: 'biconomy_error',\n  HELPER_CLENTS_READY: 'permit_and_ercforwarder_clients_ready'\n};\nvar RESPONSE_CODES = {\n  ERROR_RESPONSE: 'B500',\n  API_NOT_FOUND: 'B501',\n  USER_CONTRACT_NOT_FOUND: 'B502',\n  USER_NOT_LOGGED_IN: 'B503',\n  USER_ACCOUNT_NOT_FOUND: 'B504',\n  NETWORK_ID_MISMATCH: 'B505',\n  BICONOMY_NOT_INITIALIZED: 'B506',\n  NETWORK_ID_NOT_FOUND: 'B507',\n  SMART_CONTRACT_NOT_FOUND: 'B508',\n  DAPP_NOT_FOUND: 'B509',\n  INVALID_PAYLOAD: 'B510',\n  DASHBOARD_DATA_MISMATCH: 'B511',\n  SUCCESS_RESPONSE: 'B200',\n  USER_CONTRACT_CREATION_FAILED: 'B512',\n  EVENT_NOT_SUPPORTED: 'B513',\n  INVALID_DATA: 'B514',\n  INVALID_OPERATION: 'B515',\n  WRONG_ABI: 'B516',\n  CONDITIONS_NOT_SATISFIED: 'B517'\n}; // could get these from sys info call\n\nconfig.forwardRequestType = [{\n  name: 'from',\n  type: 'address'\n}, {\n  name: 'to',\n  type: 'address'\n}, {\n  name: 'token',\n  type: 'address'\n}, {\n  name: 'txGas',\n  type: 'uint256'\n}, {\n  name: 'tokenGasPrice',\n  type: 'uint256'\n}, {\n  name: 'batchId',\n  type: 'uint256'\n}, {\n  name: 'batchNonce',\n  type: 'uint256'\n}, {\n  name: 'deadline',\n  type: 'uint256'\n}, {\n  name: 'data',\n  type: 'bytes'\n}];\nconfig.customForwardRequestType = [{\n  name: 'warning',\n  type: 'string'\n}, {\n  name: 'info',\n  type: 'string'\n}, {\n  name: 'action',\n  type: 'string'\n}, {\n  name: 'request',\n  type: 'ERC20ForwardRequest'\n}];\nconfig.daiPermitType = [{\n  name: \"holder\",\n  type: \"address\"\n}, {\n  name: \"spender\",\n  type: \"address\"\n}, {\n  name: \"nonce\",\n  type: \"uint256\"\n}, {\n  name: \"expiry\",\n  type: \"uint256\"\n}, {\n  name: \"allowed\",\n  type: \"bool\"\n}];\nconfig.eip2612PermitType = [{\n  name: \"owner\",\n  type: \"address\"\n}, {\n  name: \"spender\",\n  type: \"address\"\n}, {\n  name: \"value\",\n  type: \"uint256\"\n}, {\n  name: \"nonce\",\n  type: \"uint256\"\n}, {\n  name: \"deadline\",\n  type: \"uint256\"\n}]; // This domain type is used in Permit Client where chainId needs to be preserved\n\nconfig.domainType = [{\n  name: \"name\",\n  type: \"string\"\n}, {\n  name: \"version\",\n  type: \"string\"\n}, {\n  name: \"chainId\",\n  type: \"uint256\"\n}, {\n  name: \"verifyingContract\",\n  type: \"address\"\n}];\nvar BICONOMY_RESPONSE_CODES = {\n  SUCCESS: 200,\n  ACTION_COMPLETE: 143,\n  USER_CONTRACT_NOT_FOUND: 148,\n  ERROR_RESPONSE: 144,\n  CONDITIONS_NOT_SATISFIED: 400\n};\nvar HTTP_CODES = {\n  OK: 200,\n  INTERNAL_SERVER_ERROR: 500,\n  NOT_FOUND: 404,\n  CONFLICT: 409,\n  EXPECTATION_FAILED: 417\n};\nvar RESPONSE_BODY_CODES = {\n  OK: 200,\n  DAPP_LIMIT_REACHED: 150,\n  USER_LIMIT_REACHED: 151,\n  API_LIMIT_REACHED: 152,\n  GAS_ESTIMATION_FAILED: 417,\n  INTERNAL_ERROR: 500,\n  NOT_FOUND: 404\n};\nvar STATUS = {\n  INIT: 'init',\n  BICONOMY_READY: 'biconomy_ready',\n  NO_DATA: 'no_data'\n};\nconfig.SCW = \"SCW\";\nmodule.exports = {\n  config: config,\n  EVENTS: EVENTS,\n  RESPONSE_CODES: RESPONSE_CODES,\n  HTTP_CODES: HTTP_CODES,\n  RESPONSE_BODY_CODES: RESPONSE_BODY_CODES,\n  BICONOMY_RESPONSE_CODES: BICONOMY_RESPONSE_CODES,\n  STATUS: STATUS\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}