{"ast":null,"code":"var _jsxFileName = \"/home/hayden/workplace/dapp-demo/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport Web3 from 'web3';\nimport Biconomy from \"@biconomy/mexa\";\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nconst {\n  config\n} = require(\"./config\");\nconst showErrorMessage = message => {\n  NotificationManager.error(message, \"Error\", 5000);\n};\nconst showSuccessMessage = message => {\n  NotificationManager.success(message, \"Message\", 3000);\n};\nconst showInfoMessage = message => {\n  NotificationManager.info(message, \"Info\", 3000);\n};\nlet contract;\nlet domainData = {\n  name: \"Quote\",\n  version: \"1\",\n  chainId: \"80001\",\n  // Kovan\n  verifyingContract: config.contract.address\n};\nconst domainType = [{\n  name: \"name\",\n  type: \"string\"\n}, {\n  name: \"version\",\n  type: \"string\"\n}, {\n  name: \"chainId\",\n  type: \"uint256\"\n}, {\n  name: \"verifyingContract\",\n  type: \"address\"\n}];\nconst metaTransactionType = [{\n  name: \"nonce\",\n  type: \"uint256\"\n}, {\n  name: \"from\",\n  type: \"address\"\n}];\nlet web3;\nfunction App() {\n  const [owner, setOwner] = useState(\"Default Owner Address\");\n  const [quote, setQuote] = useState(\"This is a default quote\");\n  const [newQuote, setNewQuote] = useState(\"\");\n  useEffect(() => {\n    if (!window.ethereum) {\n      showErrorMessage(\"Metamask is required to use this DApp\");\n      return;\n    }\n\n    // NOTE: dappId is no longer needed in latest version of Biconomy SDK\n    const biconomy = new Biconomy(window.ethereum, {\n      apiKey: \"0-kIG9Gj_.458de11b-c7b9-4a6d-9c54-634274a24325\",\n      contractAddresses: \"0x948f39835345a2a2Ce19DB649907C02A9d3aAC35\"\n    });\n    web3 = new Web3(biconomy);\n    biconomy.onEvent(biconomy.READY, async () => {\n      // Initialize your dapp here like getting user accounts etc\n      await window.ethereum.enable();\n      contract = new web3.eth.Contract(config.contract.abi, config.contract.address);\n      startApp();\n    }).onEvent(biconomy.ERROR, (error, message) => {\n      // Handle error while initializing mexa\n      console.log(error);\n    });\n  }, []);\n  const onQuoteChange = event => {\n    setNewQuote(event.target.value);\n  };\n  async function startApp() {\n    const result = await contract.methods.getQuote().call({\n      from: window.ethereum.selectedAddress\n    });\n    console.log(\"workingggg\");\n    if (result.currentOwner !== \"0x0000000000000000000000000000000000000000\") {\n      setQuote(result.currentQuote);\n      setOwner(result.currentOwner);\n    }\n  }\n  async function onButtonClickMeta() {\n    console.log(window.ethereum.selectedAddress);\n    setNewQuote(\"\");\n    console.log(contract);\n    let nonce = await contract.methods.nonces(window.ethereum.selectedAddress).call();\n    let message = {};\n    message.nonce = parseInt(nonce);\n    message.from = window.ethereum.selectedAddress;\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain: domainType,\n        MetaTransaction: metaTransactionType\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message: message\n    });\n    window.web3.currentProvider.sendAsync({\n      jsonrpc: \"2.0\",\n      id: 999999999999,\n      method: \"eth_signTypedData_v4\",\n      params: [window.ethereum.selectedAddress, dataToSign]\n    }, async function (err, result) {\n      if (err) {\n        return console.error(err);\n      }\n      console.log(\"Signature result from wallet :\");\n      console.log(result);\n      if (result && result.result) {\n        const signature = result.result.substring(2);\n        const r = \"0x\" + signature.substring(0, 64);\n        const s = \"0x\" + signature.substring(64, 128);\n        const v = parseInt(signature.substring(128, 130), 16);\n        console.log(r, \"r\");\n        console.log(s, \"s\");\n        console.log(v, \"v\");\n        console.log(window.ethereum.address, \"userAddress\");\n        console.log(newQuote, \"newQuote\");\n        const promiEvent = contract.methods.setQuoteMeta(window.ethereum.selectedAddress, newQuote, r, s, v).send({\n          from: window.ethereum.selectedAddress\n        });\n        promiEvent.on(\"transactionHash\", hash => {\n          showInfoMessage(\"Transaction sent successfully. Check Console for Transaction hash\");\n          console.log(\"Transaction Hash is \", hash);\n        }).once(\"confirmation\", (confirmationNumber, receipt) => {\n          if (receipt.status) {\n            showSuccessMessage(\"Transaction processed successfully\");\n            startApp();\n          } else {\n            showErrorMessage(\"Transaction Failed\");\n          }\n          console.log(receipt);\n        });\n      } else {\n        showErrorMessage(\"Could not get user signature. Check console logs for error\");\n      }\n    });\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  }, \"*Use this DApp only on Mumbai Network\", /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, \"Quotes\"), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-wrap mb-style-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"blockquote\", {\n    cite: \"http://www.gutenberg.org/ebboks/11\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }, quote, \" \"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-attribution\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, \"- \", owner))), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"submit-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"submit-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    size: \"100\",\n    \"border-radius\": \"15\",\n    type: \"text\",\n    placeholder: \"Enter your quote\",\n    onChange: onQuoteChange,\n    value: newQuote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"button\",\n    onClick: onButtonClickMeta,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  }, \"Submit\"))))), /*#__PURE__*/React.createElement(NotificationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","Web3","Biconomy","NotificationContainer","NotificationManager","config","require","showErrorMessage","message","error","showSuccessMessage","success","showInfoMessage","info","contract","domainData","name","version","chainId","verifyingContract","address","domainType","type","metaTransactionType","web3","App","owner","setOwner","quote","setQuote","newQuote","setNewQuote","window","ethereum","biconomy","apiKey","contractAddresses","onEvent","READY","enable","eth","Contract","abi","startApp","ERROR","console","log","onQuoteChange","event","target","value","result","methods","getQuote","call","from","selectedAddress","currentOwner","currentQuote","onButtonClickMeta","nonce","nonces","parseInt","dataToSign","JSON","stringify","types","EIP712Domain","MetaTransaction","domain","primaryType","currentProvider","sendAsync","jsonrpc","id","method","params","err","signature","substring","r","s","v","promiEvent","setQuoteMeta","send","on","hash","once","confirmationNumber","receipt","status","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","cite","size","placeholder","onChange","onClick"],"sources":["/home/hayden/workplace/dapp-demo/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport Web3 from 'web3'\nimport Biconomy from \"@biconomy/mexa\";\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nconst { config } = require(\"./config\");\nconst showErrorMessage = message => {\n  NotificationManager.error(message, \"Error\", 5000);\n};\nconst showSuccessMessage = message => {\n  NotificationManager.success(message, \"Message\", 3000);\n};\n\nconst showInfoMessage = message => {\n  NotificationManager.info(message, \"Info\", 3000);\n};\n\nlet contract;\nlet domainData = {\n  name: \"Quote\",\n  version: \"1\",\n  chainId: \"80001\",  // Kovan\n  verifyingContract: config.contract.address\n};\nconst domainType = [\n  { name: \"name\", type: \"string\" },\n  { name: \"version\", type: \"string\" },\n  { name: \"chainId\", type: \"uint256\" },\n  { name: \"verifyingContract\", type: \"address\" }\n];\n\nconst metaTransactionType = [\n  { name: \"nonce\", type: \"uint256\" },\n  { name: \"from\", type: \"address\" }\n];\n\nlet web3;\n\nfunction App() {\n\n\n  const [owner, setOwner] = useState(\"Default Owner Address\");\n  const [quote, setQuote] = useState(\"This is a default quote\");\n  const [newQuote, setNewQuote] = useState(\"\");\n  useEffect(() => {\n\n\n    if (!window.ethereum) {\n      showErrorMessage(\"Metamask is required to use this DApp\")\n      return;\n    }\n\n    // NOTE: dappId is no longer needed in latest version of Biconomy SDK\n    const biconomy = new Biconomy(window.ethereum, { apiKey: \"0-kIG9Gj_.458de11b-c7b9-4a6d-9c54-634274a24325\", \n    contractAddresses: \"0x948f39835345a2a2Ce19DB649907C02A9d3aAC35\" });\n    \t\n    web3 = new Web3(biconomy);\n\n    biconomy.onEvent(biconomy.READY, async () => {\n      // Initialize your dapp here like getting user accounts etc\n      await window.ethereum.enable();\n      contract = new web3.eth.Contract(config.contract.abi, config.contract.address);\n      startApp();\n    }).onEvent(biconomy.ERROR, (error, message) => {\n      // Handle error while initializing mexa\n      console.log(error)\n    });\n  }\n    , []);\n\n  const onQuoteChange = event => {\n    setNewQuote(event.target.value);\n  };\n\n  async function startApp() {\n    const result = await contract.methods.getQuote().call({ from: window.ethereum.selectedAddress });\n    console.log(\"workingggg\");\n\n    if (result.currentOwner !== \"0x0000000000000000000000000000000000000000\") {\n      setQuote(result.currentQuote)\n      setOwner(result.currentOwner)\n    }\n  }\n  async function onButtonClickMeta() {\n    \n    console.log(window.ethereum.selectedAddress)\n    setNewQuote(\"\");\n    console.log(contract)\n    let nonce = await contract.methods.nonces(window.ethereum.selectedAddress).call();\n    let message = {};\n    message.nonce = parseInt(nonce);\n    message.from = window.ethereum.selectedAddress;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain: domainType,\n        MetaTransaction: metaTransactionType\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message: message\n    });\n\n    window.web3.currentProvider.sendAsync(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        method: \"eth_signTypedData_v4\",\n        params: [window.ethereum.selectedAddress, dataToSign]\n      },\n      async function (err, result) {\n        if (err) {\n          return console.error(err);\n        }\n        console.log(\"Signature result from wallet :\");\n        console.log(result);\n        if(result && result.result) {\n          const signature = result.result.substring(2);\n          const r = \"0x\" + signature.substring(0, 64);\n          const s = \"0x\" + signature.substring(64, 128);\n          const v = parseInt(signature.substring(128, 130), 16);\n          console.log(r, \"r\")\n          console.log(s, \"s\")\n          console.log(v, \"v\")\n          console.log(window.ethereum.address, \"userAddress\")\n          console.log(newQuote, \"newQuote\");\n  \n          const promiEvent = contract.methods\n            .setQuoteMeta(window.ethereum.selectedAddress, newQuote, r, s, v)\n            .send({\n              from: window.ethereum.selectedAddress\n            })\n          promiEvent.on(\"transactionHash\", (hash) => {\n            showInfoMessage(\"Transaction sent successfully. Check Console for Transaction hash\")\n            console.log(\"Transaction Hash is \", hash)\n          }).once(\"confirmation\", (confirmationNumber, receipt) => {\n            if (receipt.status) {\n              showSuccessMessage(\"Transaction processed successfully\")\n              startApp()\n            } else {\n              showErrorMessage(\"Transaction Failed\");\n            }\n            console.log(receipt)\n          })\n        } else {\n          showErrorMessage(\"Could not get user signature. Check console logs for error\");\n        }\n      }\n    );\n  }\n  return (\n    <div className=\"App\">\n      *Use this DApp only on Mumbai Network\n      <header className=\"App-header\">\n        <h1>Quotes</h1>\n        <section className=\"main\">\n          <div className=\"mb-wrap mb-style-2\">\n            <blockquote cite=\"http://www.gutenberg.org/ebboks/11\">\n              <h4>{quote} </h4>\n            </blockquote>\n          </div>\n\n          <div className=\"mb-attribution\">\n            <p className=\"mb-author\">- {owner}</p>\n          </div>\n        </section>\n        <section>\n          <div className=\"submit-container\">\n            <div className=\"submit-row\">\n              <input size=\"100\"\n                border-radius=\"15\"\n                type=\"text\"\n                placeholder=\"Enter your quote\"\n                onChange={onQuoteChange}\n                value={newQuote}\n              />\n              <button type=\"button\" className=\"button\" onClick={onButtonClickMeta}>Submit</button>\n            </div>\n          </div>\n        </section>\n      </header>\n      <NotificationContainer />\n    </div >\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}